{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u8F6F\\u4EF6\\u4F4D\\u7F6E\\\\Pictures\\\\\\u5B66\\u4E60\\\\12\\u6708\\u5B66\\u4E60\\\\react\\\\code\\\\Tiantan-fund\\\\src\\\\views\\\\LifeTiems.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass LiftTimes extends React.Component {\n  // 只执行一次\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      list: [1, 2, 3]\n    };\n    console.log(props);\n    console.log(\"constructor...\");\n  }\n  //\n  // 如果只是淡出定义一个组件状态 不必要使用constructor\n  // state = {count:0,list:[1,2,3]};\n  // 默认返回true 只要props/state发生变化 都会执行render+component\n  shouldComponentUpdate() {\n    return true;\n  }\n  // 执行若干次\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u751F\\u547D\\u5468\\u671F\\u51FD\\u6570\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  // 执行若干次\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate...\");\n  }\n  // 只执行一次\n  componentDidMount() {\n    console.log(\"componentDidMount...\");\n  }\n  // 只执行一次\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount...\");\n  }\n}\nexport default LiftTimes;\n/**\r\n * 1.组件首次渲染会一次触发3个函数：constructor render componentDidMount，\r\n * 1.1 其中constructor和componentDidMount在整个组件的生命周期中只执行一次\r\n * 1.2 constructor函数具有一个形参 其作用是收集组件的props属性和子节点(props.children)\r\n * 2.组件的props/state发生更新时，会依次触发\r\n */","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","LiftTimes","Component","constructor","props","state","count","list","console","log","shouldComponentUpdate","render","children","fileName","_jsxFileName","lineNumber","columnNumber","componentDidUpdate","componentDidMount","componentWillUnmount"],"sources":["D:/软件位置/Pictures/学习/12月学习/react/code/Tiantan-fund/src/views/LifeTiems.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nclass LiftTimes extends React.Component {\r\n  // 只执行一次\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { count: 0, list: [1, 2, 3] };\r\n    console.log(props);\r\n    console.log(\"constructor...\");\r\n  }\r\n  //\r\n  // 如果只是淡出定义一个组件状态 不必要使用constructor\r\n  // state = {count:0,list:[1,2,3]};\r\n  // 默认返回true 只要props/state发生变化 都会执行render+component\r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  // 执行若干次\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>生命周期函数</div>\r\n        <div>{this.state.props}</div>\r\n      </>\r\n    );\r\n  }\r\n  // 执行若干次\r\n  componentDidUpdate() {\r\n    console.log(\"componentDidUpdate...\");\r\n  }\r\n  // 只执行一次\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount...\");\r\n  }\r\n  // 只执行一次\r\n  componentWillUnmount() {\r\n    console.log(\"componentWillUnmount...\");\r\n  }\r\n}\r\nexport default LiftTimes;\r\n/**\r\n * 1.组件首次渲染会一次触发3个函数：constructor render componentDidMount，\r\n * 1.1 其中constructor和componentDidMount在整个组件的生命周期中只执行一次\r\n * 1.2 constructor函数具有一个形参 其作用是收集组件的props属性和子节点(props.children)\r\n * 2.组件的props/state发生更新时，会依次触发\r\n */\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,SAAS,SAASL,KAAK,CAACM,SAAS,CAAC;EACtC;EACAC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAAEC,KAAK,EAAE,CAAC;MAAEC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE,CAAC;IAC1CC,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;IAClBI,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC/B;EACA;EACA;EACA;EACA;EACAC,qBAAqBA,CAAA,EAAG;IACtB,OAAO,IAAI;EACb;EACA;EACAC,MAAMA,CAAA,EAAG;IACP,oBACEb,OAAA,CAAAE,SAAA;MAAAY,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAK;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjBlB,OAAA;QAAAc,QAAA,EAAM,IAAI,CAACP,KAAK,CAACD;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,eAC7B,CAAC;EAEP;EACA;EACAC,kBAAkBA,CAAA,EAAG;IACnBT,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACtC;EACA;EACAS,iBAAiBA,CAAA,EAAG;IAClBV,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACrC;EACA;EACAU,oBAAoBA,CAAA,EAAG;IACrBX,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACxC;AACF;AACA,eAAeR,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}