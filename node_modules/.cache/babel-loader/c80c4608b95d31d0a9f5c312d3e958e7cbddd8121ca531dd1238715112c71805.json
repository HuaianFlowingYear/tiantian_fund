{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u8F6F\\u4EF6\\u4F4D\\u7F6E\\\\Pictures\\\\\\u5B66\\u4E60\\\\12\\u6708\\u5B66\\u4E60\\\\react\\\\code\\\\Tiantan-fund\\\\src\\\\views\\\\Foo.jsx\",\n  _s = $RefreshSig$();\n// use开头的函数 hook函数\n// useEffect == componentDidMount + componentDidUpdate + componentWillUnmount\nimport { useState, useEffect } from \"react\";\nimport root from \"..\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Foo() {\n  _s();\n  const [count, setCount] = useState(123);\n  // 使用useEffect实现componentDidMount\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n  }, []);\n  // 使用useEffect实现componentDidMount+ componentDidUpdate\n  useEffect(() => {\n    console.log(\"componentDidMount+ componentDidUpdate\");\n  }, [count]);\n  // [count] 这个第二个参数是一个依赖项 指定那个数据发生变化的时候发请求\n  // 使用useEffect实现componentWillUnmount\n  useEffect(() => {\n    return () => {\n      console.log(\"componentWillUnmount\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => setCount(count + 1),\n    children: count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n_s(Foo, \"5sIdAg+qJqjCJZ6SCTdwZlT1AHU=\");\n_c = Foo;\nexport default Foo;\nvar _c;\n$RefreshReg$(_c, \"Foo\");","map":{"version":3,"names":["useState","useEffect","root","jsxDEV","_jsxDEV","Foo","_s","count","setCount","console","log","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/软件位置/Pictures/学习/12月学习/react/code/Tiantan-fund/src/views/Foo.jsx"],"sourcesContent":["// use开头的函数 hook函数\r\n// useEffect == componentDidMount + componentDidUpdate + componentWillUnmount\r\nimport { useState, useEffect } from \"react\";\r\nimport root from \"..\";\r\nfunction Foo() {\r\n  const [count, setCount] = useState(123);\r\n  // 使用useEffect实现componentDidMount\r\n  useEffect(() => {\r\n    console.log(\"componentDidMount\");\r\n  }, []);\r\n  // 使用useEffect实现componentDidMount+ componentDidUpdate\r\n  useEffect(() => {\r\n    console.log(\"componentDidMount+ componentDidUpdate\");\r\n  }, [count]);\r\n  // [count] 这个第二个参数是一个依赖项 指定那个数据发生变化的时候发请求\r\n  // 使用useEffect实现componentWillUnmount\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log(\"componentWillUnmount\");\r\n    };\r\n  }, []);\r\n  return <div onClick={() => setCount(count + 1)}>{count}</div>;\r\n}\r\nexport default Foo;\r\n"],"mappings":";;AAAA;AACA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,GAAG,CAAC;EACvC;EACAC,SAAS,CAAC,MAAM;IACdQ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EACN;EACAT,SAAS,CAAC,MAAM;IACdQ,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;EACtD,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EACX;EACA;EACAN,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXQ,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACrC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,oBAAON,OAAA;IAAKO,OAAO,EAAEA,CAAA,KAAMH,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;IAAAK,QAAA,EAAEL;EAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC/D;AAACV,EAAA,CAlBQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAmBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}