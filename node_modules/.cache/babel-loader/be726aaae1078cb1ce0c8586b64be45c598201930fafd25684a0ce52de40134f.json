{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u8F6F\\u4EF6\\u4F4D\\u7F6E\\\\Pictures\\\\\\u5B66\\u4E60\\\\12\\u6708\\u5B66\\u4E60\\\\react\\\\code\\\\Tiantan-fund\\\\src\\\\views\\\\LifeTiems.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass LiftTimes extends React.Component {\n  // 只执行一次\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  //\n  // 如果只是淡出定义一个组件状态 不必要使用constructor\n  // state = {count:0,list:[1,2,3]};\n  // 默认返回true 只要props/state发生变化 都会执行render+component\n  shouldComponentUpdate() {\n    return true;\n  }\n  // 执行若干次\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u751F\\u547D\\u5468\\u671F\\u51FD\\u6570\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n  // 执行若干次\n  componentDidUpdate() {}\n  // 只执行一次\n  componentDidMount() {}\n  // 只执行一次\n  componentWillUnmount() {}\n}\nexport default LiftTimes;\n/**\r\n * 组件首次渲染会一次触发3个函数：constructor render componentDidMount， 其中constructor和componentDidMount在整个组件的生命周期中\r\n */","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","LiftTimes","Component","constructor","props","state","shouldComponentUpdate","render","children","fileName","_jsxFileName","lineNumber","columnNumber","componentDidUpdate","componentDidMount","componentWillUnmount"],"sources":["D:/软件位置/Pictures/学习/12月学习/react/code/Tiantan-fund/src/views/LifeTiems.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nclass LiftTimes extends React.Component {\r\n  // 只执行一次\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  //\r\n  // 如果只是淡出定义一个组件状态 不必要使用constructor\r\n  // state = {count:0,list:[1,2,3]};\r\n  // 默认返回true 只要props/state发生变化 都会执行render+component\r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  // 执行若干次\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>生命周期函数</div>\r\n      </>\r\n    );\r\n  }\r\n  // 执行若干次\r\n  componentDidUpdate() {}\r\n  // 只执行一次\r\n  componentDidMount() {}\r\n  // 只执行一次\r\n  componentWillUnmount() {}\r\n}\r\nexport default LiftTimes;\r\n/**\r\n * 组件首次渲染会一次触发3个函数：constructor render componentDidMount， 其中constructor和componentDidMount在整个组件的生命周期中\r\n */\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,SAAS,SAASL,KAAK,CAACM,SAAS,CAAC;EACtC;EACAC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;EACjB;EACA;EACA;EACA;EACA;EACAC,qBAAqBA,CAAA,EAAG;IACtB,OAAO,IAAI;EACb;EACA;EACAC,MAAMA,CAAA,EAAG;IACP,oBACET,OAAA,CAAAE,SAAA;MAAAQ,QAAA,eACEV,OAAA;QAAAU,QAAA,EAAK;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC,gBACjB,CAAC;EAEP;EACA;EACAC,kBAAkBA,CAAA,EAAG,CAAC;EACtB;EACAC,iBAAiBA,CAAA,EAAG,CAAC;EACrB;EACAC,oBAAoBA,CAAA,EAAG,CAAC;AAC1B;AACA,eAAed,SAAS;AACxB;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}